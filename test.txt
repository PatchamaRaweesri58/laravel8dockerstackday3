1.ออกแบบdatabase บนdocker

2.คำสั่ง import ไฟล์ manuf.json

php artisan import:json 
 
3. Http::get('https://api.example.com/data'): คำสั่งนี้ใช้สำหรับการส่งคำขอ HTTP GET เพื่อเรียกข้อมูลจากแหล่งข้อมูลอื่น ๆ ซึ่งในตัวอย่างนี้คือ API ที่อยู่ที่ URL https://api.example.com/data โดยใช้ Facade Http ซึ่งเป็น Facade ของ Guzzle HTTP Client ที่ Laravel มีให้ใช้งาน

$response->json(): เมื่อได้รับการตอบกลับจาก API สำหรับข้อมูลที่เรียกมา เราจะใช้เมธอด json() เพื่อแปลงข้อมูล JSON ที่ได้รับมาเป็นรูปแบบของ Array หรือ Object ตามการกำหนดไว้ใน API

foreach ($data as $item) { YourModel::updateOrCreate(['id' => $item['id']], $item); }: เมื่อได้ข้อมูลจาก API มาแล้ว เราจะใช้ลูป foreach เพื่อวนลูปทุกๆ รายการใน $data ซึ่งเป็น Array ของข้อมูลที่ได้รับมา และสำหรับแต่ละรายการ เราจะใช้เมธอด updateOrCreate() ของโมเดล YourModel เพื่อทำการอัปเดตข้อมูลในฐานข้อมูลของเรา โดยใช้ข้อมูลในรูปแบบของ $item ที่เป็นข้อมูลของแต่ละรายการที่ได้รับมาจาก API

$this->info('Database updated successfully!'): เมื่อการอัปเดตฐานข้อมูลเสร็จสมบูรณ์ จะแสดงข้อความ "Database updated successfully!" ใน Command Line Interface เพื่อแสดงผลว่าการอัปเดตได้เสร็จสมบูรณ์แล้ว

มีวัตถุประสงค์ในการอัปเดตฐานข้อมูลของคุณจากแหล่งอื่นๆ ที่เป็น API และมีข้อมูลที่ต้องการนำเข้าเข้าสู่ฐานข้อมูลของคุณโดยอัตโนมัติโดยเรียกใช้คำสั่ง 

php artisan update:database

4. http://localhost:8100/api/data

5. หน้า frontend ที่มีการแบ่งข้อมูลออกเป็นหน้าๆ ทีละ 100 ข้อมูล

6. หน้า frontend มีเมนูค้นหาจาก

    6.1 Dropdown list ของ vendor ที่มี list 100 อันดับแรกของทั้งหมด
    6.2 Prefix ของ MAC Address โดยสามารถค้นบางส่วนของคำได้

7. เพื่อเก็บรหัสผ่านของผู้ใช้โดยปลอดภัยและไม่สามารถนำคืนค่าเดิมออกมาได้ โดยที่เราใช้ Laravel Passport เพื่อสร้างและจัดการ Token ของผู้ใช้ ซึ่งสามารถเก็บรหัสผ่านเป็นรูปแบบลับ (hashed) และใช้ Token ในการยืนยันการร้องขอข้อมูลแทนการส่งรหัสผ่านไปและมาได้